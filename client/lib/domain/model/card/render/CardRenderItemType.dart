import 'package:mars_flutter/data/asset_paths_gen/assets.gen.dart';

enum CardRenderItemType {
  TEMPERATURE,
  OXYGEN,
  OCEANS,
  VENUS,
  PLANTS,
  TR,
  INFERIOR_TR,
  HEAT,
  ENERGY,
  TITANIUM,
  STEEL,
  MEGACREDITS,
  CARDS,
  FLOATERS,
  ASTEROIDS,
  MICROBES,
  ANIMALS,
  EVENT,
  SPACE,
  EARTH,
  JOVIAN,
  BUILDING,
  COLONIES,
  SCIENCE,
  TRADE,
  TRADE_DISCOUNT,
  TRADE_FLEET,
  COLONY_TILE,
  PLACE_COLONY,
  CHAIRMAN,
  PARTY_LEADERS,
  DELEGATES,
  INFLUENCE,
  NO_TAGS,
  EMPTY_TAG,
  PRESERVATION,
  WILD,
  FIGHTER,
  CAMPS,
  DIVERSE_TAG,
  CITY,
  GREENERY,
  PLATE,
  TEXT,
  NBSP,
  EMPTY_TILE,
  EMPTY_TILE_GOLDEN,
  EMPTY_TILE_SPECIAL,
  SELF_REPLICATING,
  MULTIPLIER_WHITE,
  IGNORE_GLOBAL_REQUIREMENTS,
  PRELUDE,
  AWARD,
  MILESTONE,
  CORPORATION,
  VP,
  COMMUNITY,
  DISEASE,
  MOON,
  RESOURCE_CUBE,
  DATA_RESOURCE,
  MOON_HABITAT,
  MOON_HABITAT_RATE,
  MOON_ROAD,
  MOON_LOGISTICS_RATE,
  MOON_MINE,
  MOON_MINING_RATE,
  SYNDICATE_FLEET,
  MARS,
  VENUSIAN_HABITAT,
  SPECIALIZED_ROBOT,
  AGENDA,
  PLANETARY_TRACK,
  SEED,
  ORBITAL,
  GLOBAL_EVENT,
  FIRST_PLAYER,
  RULING_PARTY,
  CATHEDRAL,
  GRAPHENE,
  NOMADS,
  HYDROELECTRIC_RESOURCE,
  CITY_OR_SPECIAL_TILE,
  ARROW_OPG,
  REDS,
  REDS_DEACTIVATED,
  HAZARD_TILE,
  ADJACENCY_BONUS,
  CLONE_TROOPER,
  IDENTIFY,
  EXCAVATE,
  CORRUPTION,
  NEUTRAL_DELEGATE,
  UNDERGROUND_RESOURCES,
  CORRUPTION_SHIELD,
  TOOL,
  WARE,
  SCOOP,
  JOURNALISM,
  ACTIVIST,
  SUPPLY_CHAIN,
  GEOSCAN_ICON,
  UNDERGROUND_SHELTERS,
  RED_ARROW_3X,
  RED_ARROW,
  RED_ARROW_INFINITY,
  UNKNOWN;

  static const _TO_STRING_MAP = {
    TEMPERATURE: 'temperature',
    OXYGEN: 'oxygen',
    OCEANS: 'oceans',
    VENUS: 'venus',
    PLANTS: 'plants',
    TR: 'tr',
    HEAT: 'heat',
    ENERGY: 'energy',
    TITANIUM: 'titanium',
    STEEL: 'steel',
    MEGACREDITS: 'megacredits',
    CARDS: 'cards',
    FLOATERS: 'floaters',
    ASTEROIDS: 'asteroids',
    MICROBES: 'microbes',
    ANIMALS: 'animals',
    EVENT: 'event',
    SPACE: 'space',
    EARTH: 'earth',
    JOVIAN: 'jovian',
    BUILDING: 'building',
    COLONIES: 'colonies',
    SCIENCE: 'science',
    TRADE: 'trade',
    TRADE_DISCOUNT: 'trade_discount',
    TRADE_FLEET: 'trade_fleet',
    COLONY_TILE: 'colony_tile',
    PLACE_COLONY: 'place_colony',
    CHAIRMAN: 'chairman',
    PARTY_LEADERS: 'party_leaders',
    DELEGATES: 'delegates',
    INFLUENCE: 'influence',
    NO_TAGS: 'no_tags',
    EMPTY_TAG: 'empty_tag',
    PRESERVATION: 'preservation',
    WILD: 'wild',
    FIGHTER: 'fighter',
    CAMPS: 'camps',
    DIVERSE_TAG: 'diverse_tag',
    CITY: 'city',
    GREENERY: 'greenery',
    PLATE: 'plate',
    TEXT: 'text',
    NBSP: 'nbsp',
    EMPTY_TILE: 'empty_tile',
    EMPTY_TILE_GOLDEN: 'empty_tile_golden',
    EMPTY_TILE_SPECIAL: 'empty_tile_special',
    SELF_REPLICATING: 'self_replicating',
    MULTIPLIER_WHITE: 'multiplier_white',
    IGNORE_GLOBAL_REQUIREMENTS: 'ignore_global_requirements',
    PRELUDE: 'prelude',
    AWARD: 'award',
    MILESTONE: 'milestone',
    CORPORATION: 'corporation',
    VP: 'vp',
    COMMUNITY: 'community',
    DISEASE: 'disease',
    MOON: 'moon',
    RESOURCE_CUBE: 'resource_cube',
    DATA_RESOURCE: 'data resource',
    MOON_HABITAT: 'moon-colony',
    MOON_HABITAT_RATE: 'moon-colony-rate',
    MOON_ROAD: 'moon-road',
    MOON_LOGISTICS_RATE: 'moon-logistics-rate',
    MOON_MINE: 'moon-mine',
    MOON_MINING_RATE: 'moon-mine-rate',
    SYNDICATE_FLEET: 'syndicate-fleet',
    MARS: 'mars',
    VENUSIAN_HABITAT: 'venusian-habitat',
    SPECIALIZED_ROBOT: 'specialized-robot',
    AGENDA: 'mind-set-agenda',
    PLANETARY_TRACK: 'plantary-track',
    SEED: 'seed',
    ORBITAL: 'orbital',
    GLOBAL_EVENT: 'global-event',
    FIRST_PLAYER: '1p',
    RULING_PARTY: 'ruling-party',
    CATHEDRAL: 'cathedral',
    GRAPHENE: 'graphene',
    NOMADS: 'nomads',
    HYDROELECTRIC_RESOURCE: 'hydroelectric-resource',
    CITY_OR_SPECIAL_TILE: 'city-or-special-tile',
    // CEO Extension:
    ARROW_OPG: 'arrow-opg',
    REDS: 'reds',
    REDS_DEACTIVATED: 'reds-deactivated',
    HAZARD_TILE: 'hazard-tile',
    ADJACENCY_BONUS: 'adjacency-bonus',
    // Star Wars
    CLONE_TROOPER: 'clone-trooper',
    // Underworld
    IDENTIFY: 'identify',
    EXCAVATE: 'excavate',
    CORRUPTION: 'corruption',
    NEUTRAL_DELEGATE: 'neutral-delegate',
    UNDERGROUND_RESOURCES: 'underground-resources',
    CORRUPTION_SHIELD: 'corruptive-block',
    TOOL: 'tool',
    WARE: 'ware',
    SCOOP: 'scoop',
    JOURNALISM: 'journalism',
    ACTIVIST: 'activist',
    SUPPLY_CHAIN: 'supply-chain',
    GEOSCAN_ICON: 'geoscan-icon',
    UNDERGROUND_SHELTERS: 'underground-shelters',
    RED_ARROW_3X: 'red-arrow-3x',
    RED_ARROW: 'red-arrow',
    RED_ARROW_INFINITY: 'red-arrow-infinity',
    UNKNOWN: "Unknown"
  };

  static final _TO_IMAGE_PATH_MAP = {
    TEMPERATURE: Assets.globalParameters.temperature.path,
    OXYGEN: Assets.globalParameters.oxygen.path,
    OCEANS: Assets.tiles.ocean.path,
    VENUS: Assets.globalParameters.venus.path,
    PLANTS: Assets.resources.plant.path,
    TR: Assets.resources.tr.path,
    HEAT: Assets.resources.heat.path,
    ENERGY: Assets.resources.power.path,
    TITANIUM: Assets.resources.titanium.path,
    STEEL: Assets.resources.steel.path,
    MEGACREDITS: Assets.resources.megacredit.path,
    CARDS: Assets.resources.card.path,
    FLOATERS: Assets.resources.floater.path,
    ASTEROIDS: Assets.resources.asteroid.path,
    MICROBES: Assets.resources.microbe.path,
    ANIMALS: Assets.resources.animal.path,
    EVENT: Assets.tags.event.path,
    SPACE: Assets.tags.space.path,
    FIGHTER: Assets.resources.fighter.path,
    MOON_MINE: Assets.moon.minetile.path,
    EARTH: Assets.tags.earth.path,
    JOVIAN: Assets.tags.jovian.path,
    BUILDING: Assets.tags.building.path,
    SCIENCE: Assets.resources.science.path,
    NO_TAGS: Assets.tags.tagNone.path,
    WILD: Assets.resources.wild.path,
    CAMPS: Assets.resources.camp.path,
    CITY: Assets.tiles.city.path,
    GREENERY: Assets.tiles.greeneryNoO2.path,
    DISEASE: Assets.resources.disease.path,
    MARS: Assets.tags.mars.path,
    AGENDA: Assets.resources.agenda.path,
    SEED: Assets.resources.seed.path,
    ORBITAL: Assets.resources.orbital.path,
    COLONIES: Assets.tiles.colony.path,
    DATA_RESOURCE: Assets.resources.data.path,
    MOON: Assets.tags.moon.path,
    MOON_ROAD: Assets.moon.roadtile.path,
    MOON_LOGISTICS_RATE: Assets.moon.cardLogisticsRate.path,
    MOON_MINING_RATE: Assets.moon.cardMiningRate.path,
    INFLUENCE: Assets.misc.influence.path,
    DELEGATES: Assets.misc.delegate.path,
    CHAIRMAN: Assets.misc.chairman.path,
    EMPTY_TILE: Assets.tiles.emptyTile.path,
    EMPTY_TILE_GOLDEN: Assets.tiles.emptyTileGolden.path,
    EMPTY_TILE_SPECIAL: Assets.tiles.special.path,
    MOON_HABITAT: Assets.moon.colonytile.path,
    MOON_HABITAT_RATE: Assets.moon.cardColonyRate.path,
    ARROW_OPG: Assets.ceos.arrowOpg.path,
    PLANETARY_TRACK: Assets.pathfinders.planetaryTrack.path,
    TRADE_FLEET: Assets.tiles.trade.path,
    TRADE: Assets.tiles.trade.path,
    HAZARD_TILE: Assets.tiles.hazard.path,
    REDS: Assets.parties.reds.path,
    REDS_DEACTIVATED: Assets.parties.reds.path,
    ADJACENCY_BONUS: Assets.tiles.adjacencyBonus.path,
    CORPORATION: Assets.misc.corpCard.path,
    SYNDICATE_FLEET: Assets.resources.syndicateFleet.path,
    FIRST_PLAYER: Assets.misc.firstPlayer.path,
    RULING_PARTY: Assets.parties.parties.path,
    VENUSIAN_HABITAT: Assets.resources.venusianHabitat.path,
    PRESERVATION: Assets.resources.preservation.path,
    RESOURCE_CUBE: Assets.cube.path,
    SPECIALIZED_ROBOT: Assets.resources.specializedRobot.path,
    PARTY_LEADERS: Assets.misc.delegate.path,
    GLOBAL_EVENT: Assets.parties.globalEvent.path,
    CORRUPTION: Assets.underworld.corruption.path,
    HYDROELECTRIC_RESOURCE: Assets.resources.hydroelectricResource.path,
    CITY_OR_SPECIAL_TILE: Assets.promo.cityOrSpecialTile.path,
    TOOL: Assets.underworld.cardResourceTool.path,
    WARE: Assets.underworld.cardResourceWare.path,
    SCOOP: Assets.underworld.cardResourceScoop.path,
    JOURNALISM: Assets.underworld.cardResourceJournalism.path,
    ACTIVIST: Assets.underworld.cardResourceActivist.path,
    SUPPLY_CHAIN: Assets.underworld.cardResourceSupplyChain.path,
    GEOSCAN_ICON: Assets.underworld.geoscanIcon.path,
    EXCAVATE: Assets.underworld.excavate.path,
    IDENTIFY: Assets.underworld.identify.path,
    CORRUPTION_SHIELD: Assets.underworld.corruptionBlock.path,
    GRAPHENE: Assets.resources.graphene.path,
    CLONE_TROOPER: Assets.resources.cloneTrooper.path,
    CATHEDRAL: Assets.promo.cathedral.path,
    NEUTRAL_DELEGATE: Assets.misc.delegate.path,
    RED_ARROW_3X: Assets.misc.arrow3x.path,
    RED_ARROW: Assets.misc.arrow.path,
    RED_ARROW_INFINITY: Assets.misc.arrowInfinity.path,
  };
  static final _TO_PLAYED_IMAGE_PATH_MAP = {
    PLANTS: Assets.tags.plant.path,
    ENERGY: Assets.tags.power.path,
    MICROBES: Assets.tags.microbe.path,
    ANIMALS: Assets.tags.animal.path,
    EARTH: Assets.tags.earth.path,
    JOVIAN: Assets.tags.jovian.path,
    BUILDING: Assets.tags.building.path,
    SCIENCE: Assets.tags.science.path,
    EVENT: Assets.tags.event.path,
    SPACE: Assets.tags.space.path,
    VENUS: Assets.tags.venus.path,
    MOON: Assets.tags.moon.path,
    WILD: Assets.tags.wild.path,
    MARS: Assets.tags.mars.path,
    CITY: Assets.tags.city.path,
  };
  static final _TO_ITEM_SHAPE_MAP = {
    OCEANS: ItemShape.hexagon,
    PLANTS: ItemShape.square,
    HEAT: ItemShape.square,
    ENERGY: ItemShape.square,
    TITANIUM: ItemShape.square,
    STEEL: ItemShape.square,
    MEGACREDITS: ItemShape.square,
    FLOATERS: ItemShape.square,
    ASTEROIDS: ItemShape.square,
    MICROBES: ItemShape.square,
    ANIMALS: ItemShape.square,
    EVENT: ItemShape.circle,
    SPACE: ItemShape.circle,
    FIGHTER: ItemShape.square,
    EARTH: ItemShape.circle,
    JOVIAN: ItemShape.circle,
    BUILDING: ItemShape.circle,
    SCIENCE: ItemShape.square,
    NO_TAGS: ItemShape.circle,
    WILD: ItemShape.square,
    CAMPS: ItemShape.square,
    CITY: ItemShape.hexagon,
    GREENERY: ItemShape.hexagon,
    DISEASE: ItemShape.square,
    MARS: ItemShape.circle,
    AGENDA: ItemShape.square,
    SEED: ItemShape.square,
    ORBITAL: ItemShape.square,
    COLONIES: ItemShape.triangle,
    DATA_RESOURCE: ItemShape.square,
    MOON: ItemShape.circle,
    MOON_ROAD: ItemShape.hexagon,
    MOON_LOGISTICS_RATE: ItemShape.circle,
    MOON_MINE: ItemShape.hexagon,
    MOON_MINING_RATE: ItemShape.circle,
    EMPTY_TILE: ItemShape.hexagon,
    EMPTY_TILE_GOLDEN: ItemShape.hexagon,
    EMPTY_TILE_SPECIAL: ItemShape.hexagon,
    MOON_HABITAT: ItemShape.hexagon,
    MOON_HABITAT_RATE: ItemShape.circle,
    TRADE_FLEET: ItemShape.triangle,
    TRADE: ItemShape.triangle,
    HAZARD_TILE: ItemShape.hexagon,
    ADJACENCY_BONUS: ItemShape.hexagon,
    SYNDICATE_FLEET: ItemShape.square,
    VENUSIAN_HABITAT: ItemShape.square,
    PRESERVATION: ItemShape.square,
    SPECIALIZED_ROBOT: ItemShape.square,
    DELEGATES: ItemShape.square,
    CORRUPTION: ItemShape.square,
    RED_ARROW_3X: ItemShape.square,
    RED_ARROW: ItemShape.square,
    RED_ARROW_INFINITY: ItemShape.square,
  };
  static final _TO_ENUM_MAP =
      _TO_STRING_MAP.map((key, value) => MapEntry(value, key));
  String? toImagePath(bool isPlayed) => isPlayed
      ? _TO_PLAYED_IMAGE_PATH_MAP[this] ?? _TO_IMAGE_PATH_MAP[this]
      : _TO_IMAGE_PATH_MAP[this];
  ItemShape? toItemShape(bool isPlayed) =>
      isPlayed ? ItemShape.circle : _TO_ITEM_SHAPE_MAP[this];
  @override
  String toString() => _TO_STRING_MAP[this] ?? 'Unknown';
  static fromString(String value) => _TO_ENUM_MAP[value] ?? UNKNOWN;
}

enum ItemShape {
  circle,
  square,
  hexagon,
  triangle,
}
